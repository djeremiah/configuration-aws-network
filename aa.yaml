crossplane beta render examples/network-xr.yaml apis/basic/composition.yaml examples/function/function.yaml -r
---
apiVersion: aws.platform.upbound.io/v1alpha1
kind: XNetwork
metadata:
  name: ref-aws-network
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  annotations:
    crossplane.io/composition-resource-name: subnetPublicB
  generateName: ref-aws-network-
  labels:
    access: public
    crossplane.io/composite: ref-aws-network
    networks.aws.platform.upbound.io/network-id: platform-ref-aws
    zone: us-west-2b
  ownerReferences:
  - apiVersion: aws.platform.upbound.io/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: XNetwork
    name: ref-aws-network
    uid: ""
spec:
  forProvider:
    availabilityZone: us-west-2b
    cidrBlock: 192.168.64.0/18
    mapPublicIpOnLaunch: true
    region: us-west-2
    tags:
      kubernetes.io/role/elb: "1"
      networks.aws.platform.upbound.io/network-id: platform-ref-aws
    vpcIdSelector:
      matchControllerRef: true
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: RouteTableAssociation
metadata:
  annotations:
    crossplane.io/composition-resource-name: routeTableAssociationPrivateB
  generateName: ref-aws-network-
  labels:
    crossplane.io/composite: ref-aws-network
    networks.aws.platform.upbound.io/network-id: platform-ref-aws
  ownerReferences:
  - apiVersion: aws.platform.upbound.io/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: XNetwork
    name: ref-aws-network
    uid: ""
spec:
  forProvider:
    region: us-west-2
    routeTableIdSelector:
      matchControllerRef: true
    subnetIdSelector:
      matchControllerRef: true
      matchLabels:
        access: private
        zone: us-west-2b
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: VPC
metadata:
  annotations:
    crossplane.io/composition-resource-name: vpc
  generateName: ref-aws-network-
  labels:
    crossplane.io/composite: ref-aws-network
    networks.aws.platform.upbound.io/network-id: platform-ref-aws
  ownerReferences:
  - apiVersion: aws.platform.upbound.io/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: XNetwork
    name: ref-aws-network
    uid: ""
spec:
  forProvider:
    cidrBlock: 192.168.0.0/16
    enableDnsHostnames: true
    enableDnsSupport: true
    region: us-west-2
    tags:
      Name: ref-aws-network
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: SecurityGroupRule
metadata:
  annotations:
    crossplane.io/composition-resource-name: securityGroupRuleMysql
    test.crossplane.io/subnetIds: subnet-abc
  generateName: ref-aws-network-
  labels:
    crossplane.io/composite: ref-aws-network
    networks.aws.platform.upbound.io/network-id: platform-ref-aws
  ownerReferences:
  - apiVersion: aws.platform.upbound.io/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: XNetwork
    name: ref-aws-network
    uid: ""
spec:
  forProvider:
    cidrBlocks:
    - 0.0.0.0/0
    description: Everywhere
    fromPort: 3306
    protocol: tcp
    region: us-west-2
    securityGroupIdSelector:
      matchControllerRef: true
    toPort: 3306
    type: ingress
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: Route
metadata:
  annotations:
    crossplane.io/composition-resource-name: route
  generateName: ref-aws-network-
  labels:
    crossplane.io/composite: ref-aws-network
    networks.aws.platform.upbound.io/network-id: platform-ref-aws
  ownerReferences:
  - apiVersion: aws.platform.upbound.io/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: XNetwork
    name: ref-aws-network
    uid: ""
spec:
  forProvider:
    destinationCidrBlock: 0.0.0.0/0
    gatewayIdSelector:
      matchControllerRef: true
    region: us-west-2
    routeTableIdSelector:
      matchControllerRef: true
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: RouteTableAssociation
metadata:
  annotations:
    crossplane.io/composition-resource-name: routeTableAssociationPublicB
  generateName: ref-aws-network-
  labels:
    crossplane.io/composite: ref-aws-network
    networks.aws.platform.upbound.io/network-id: platform-ref-aws
  ownerReferences:
  - apiVersion: aws.platform.upbound.io/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: XNetwork
    name: ref-aws-network
    uid: ""
spec:
  forProvider:
    region: us-west-2
    routeTableIdSelector:
      matchControllerRef: true
    subnetIdSelector:
      matchControllerRef: true
      matchLabels:
        access: public
        zone: us-west-2b
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: InternetGateway
metadata:
  annotations:
    crossplane.io/composition-resource-name: internetGateway
  generateName: ref-aws-network-
  labels:
    crossplane.io/composite: ref-aws-network
    networks.aws.platform.upbound.io/network-id: platform-ref-aws
  ownerReferences:
  - apiVersion: aws.platform.upbound.io/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: XNetwork
    name: ref-aws-network
    uid: ""
spec:
  forProvider:
    region: us-west-2
    vpcIdSelector:
      matchControllerRef: true
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  annotations:
    crossplane.io/composition-resource-name: subnetPublicA
  generateName: ref-aws-network-
  labels:
    access: public
    crossplane.io/composite: ref-aws-network
    networks.aws.platform.upbound.io/network-id: platform-ref-aws
    zone: us-west-2a
  ownerReferences:
  - apiVersion: aws.platform.upbound.io/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: XNetwork
    name: ref-aws-network
    uid: ""
spec:
  forProvider:
    availabilityZone: us-west-2a
    cidrBlock: 192.168.0.0/18
    mapPublicIpOnLaunch: true
    region: us-west-2
    tags:
      kubernetes.io/role/elb: "1"
      networks.aws.platform.upbound.io/network-id: platform-ref-aws
    vpcIdSelector:
      matchControllerRef: true
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: RouteTable
metadata:
  annotations:
    crossplane.io/composition-resource-name: routeTable
  generateName: ref-aws-network-
  labels:
    crossplane.io/composite: ref-aws-network
    networks.aws.platform.upbound.io/network-id: platform-ref-aws
  ownerReferences:
  - apiVersion: aws.platform.upbound.io/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: XNetwork
    name: ref-aws-network
    uid: ""
spec:
  forProvider:
    region: us-west-2
    vpcIdSelector:
      matchControllerRef: true
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: MainRouteTableAssociation
metadata:
  annotations:
    crossplane.io/composition-resource-name: mainRouteTableAssociation
  generateName: ref-aws-network-
  labels:
    crossplane.io/composite: ref-aws-network
    networks.aws.platform.upbound.io/network-id: platform-ref-aws
  ownerReferences:
  - apiVersion: aws.platform.upbound.io/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: XNetwork
    name: ref-aws-network
    uid: ""
spec:
  forProvider:
    region: us-west-2
    routeTableIdSelector:
      matchControllerRef: true
    vpcIdSelector:
      matchControllerRef: true
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  annotations:
    crossplane.io/composition-resource-name: subnetPrivateA
  generateName: ref-aws-network-
  labels:
    access: private
    crossplane.io/composite: ref-aws-network
    networks.aws.platform.upbound.io/network-id: platform-ref-aws
    zone: us-west-2a
  ownerReferences:
  - apiVersion: aws.platform.upbound.io/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: XNetwork
    name: ref-aws-network
    uid: ""
spec:
  forProvider:
    availabilityZone: us-west-2a
    cidrBlock: 192.168.128.0/18
    region: us-west-2
    tags:
      kubernetes.io/role/internal-elb: "1"
    vpcIdSelector:
      matchControllerRef: true
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: RouteTableAssociation
metadata:
  annotations:
    crossplane.io/composition-resource-name: routeTableAssociationPublicA
  generateName: ref-aws-network-
  labels:
    crossplane.io/composite: ref-aws-network
    networks.aws.platform.upbound.io/network-id: platform-ref-aws
  ownerReferences:
  - apiVersion: aws.platform.upbound.io/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: XNetwork
    name: ref-aws-network
    uid: ""
spec:
  forProvider:
    region: us-west-2
    routeTableIdSelector:
      matchControllerRef: true
    subnetIdSelector:
      matchControllerRef: true
      matchLabels:
        access: public
        zone: us-west-2a
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: RouteTableAssociation
metadata:
  annotations:
    crossplane.io/composition-resource-name: routeTableAssociationPrivateA
  generateName: ref-aws-network-
  labels:
    crossplane.io/composite: ref-aws-network
    networks.aws.platform.upbound.io/network-id: platform-ref-aws
  ownerReferences:
  - apiVersion: aws.platform.upbound.io/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: XNetwork
    name: ref-aws-network
    uid: ""
spec:
  forProvider:
    region: us-west-2
    routeTableIdSelector:
      matchControllerRef: true
    subnetIdSelector:
      matchControllerRef: true
      matchLabels:
        access: private
        zone: us-west-2a
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  annotations:
    crossplane.io/composition-resource-name: subnetPrivateB
  generateName: ref-aws-network-
  labels:
    access: private
    crossplane.io/composite: ref-aws-network
    networks.aws.platform.upbound.io/network-id: platform-ref-aws
    zone: us-west-2b
  ownerReferences:
  - apiVersion: aws.platform.upbound.io/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: XNetwork
    name: ref-aws-network
    uid: ""
spec:
  forProvider:
    availabilityZone: us-west-2b
    cidrBlock: 192.168.192.0/18
    region: us-west-2
    tags:
      kubernetes.io/role/internal-elb: "1"
    vpcIdSelector:
      matchControllerRef: true
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: SecurityGroupRule
metadata:
  annotations:
    crossplane.io/composition-resource-name: securityGroupRulePostgres
  generateName: ref-aws-network-
  labels:
    crossplane.io/composite: ref-aws-network
    networks.aws.platform.upbound.io/network-id: platform-ref-aws
  ownerReferences:
  - apiVersion: aws.platform.upbound.io/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: XNetwork
    name: ref-aws-network
    uid: ""
spec:
  forProvider:
    cidrBlocks:
    - 0.0.0.0/0
    description: Everywhere
    fromPort: 5432
    protocol: tcp
    region: us-west-2
    securityGroupIdSelector:
      matchControllerRef: true
    toPort: 5432
    type: ingress
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: SecurityGroup
metadata:
  annotations:
    crossplane.io/composition-resource-name: securityGroup
  generateName: ref-aws-network-
  labels:
    crossplane.io/composite: ref-aws-network
    networks.aws.platform.upbound.io/network-id: platform-ref-aws
  ownerReferences:
  - apiVersion: aws.platform.upbound.io/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: XNetwork
    name: ref-aws-network
    uid: ""
spec:
  forProvider:
    description: Allow access to databases
    name: platform-ref-aws-cluster
    region: us-west-2
    vpcIdSelector:
      matchControllerRef: true
